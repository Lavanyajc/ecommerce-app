name: Deploy Frontend to EC2 via ECR

on:
  push:
    branches: [main]

permissions:
  id-token: write 
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: |
        IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest"
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
        docker build -t $IMAGE_URI ./frontend

    - name: Push Docker image to ECR
      run: |
        docker push ${{ env.IMAGE_URI }}

    - name: Deploy on EC2 via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest"
          docker pull $IMAGE_URI
          docker stop frontend || true
          docker rm frontend || true
          docker run -d -p 8080:80 --name frontend $IMAGE_URI
